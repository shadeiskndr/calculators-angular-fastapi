name: Python CI

on:
  push:
    branches: [main, develop]
    paths:
      - "fast-api-backend/**"
      - ".github/workflows/ci-py.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "fast-api-backend/**"
      - ".github/workflows/ci-py.yml"

defaults:
  run:
    working-directory: fast-api-backend

jobs:
  lint-and-format:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest httpx  # Add test dependencies

      - name: Check code formatting with Black
        run: |
          black --check --diff . || (echo "Code formatting issues found. Run 'black .' to fix." && exit 1)

      - name: Run linting with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest httpx pytest-cov

      - name: Run tests with coverage
        run: |
          pytest --cov=. --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./fast-api-backend/coverage.xml
          flags: backend
          name: backend-coverage

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install safety bandit

      - name: Run safety check
        run: safety check

      - name: Run bandit security scan
        run: bandit -r . -f json -o bandit-report.json || true

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./fast-api-backend
          push: false
          tags: calculators-api:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
